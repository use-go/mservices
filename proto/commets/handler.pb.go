// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.14.0
// source: proto/commets/handler.proto

package commets

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_proto_commets_handler_proto protoreflect.FileDescriptor

var file_proto_commets_handler_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x74, 0x73, 0x2f,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x74, 0x73, 0x1a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x74, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x74, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x32, 0x82, 0x03, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x74, 0x73, 0x12,
	0x47, 0x0a, 0x0a, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x74, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x74, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x74, 0x73,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x47, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x74, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x74, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x09, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x74,
	0x73, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x74, 0x73, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x56, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x74, 0x73, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x74, 0x73, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x3b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var file_proto_commets_handler_proto_goTypes = []interface{}{
	(*InsertInfoRequest)(nil),       // 0: commets.InsertInfoRequest
	(*DeleteInfoRequest)(nil),       // 1: commets.DeleteInfoRequest
	(*UpdateInfoRequest)(nil),       // 2: commets.UpdateInfoRequest
	(*QueryInfoRequest)(nil),        // 3: commets.QueryInfoRequest
	(*QueryInfoDetailRequest)(nil),  // 4: commets.QueryInfoDetailRequest
	(*InsertInfoResponse)(nil),      // 5: commets.InsertInfoResponse
	(*DeleteInfoResponse)(nil),      // 6: commets.DeleteInfoResponse
	(*UpdateInfoResponse)(nil),      // 7: commets.UpdateInfoResponse
	(*QueryInfoResponse)(nil),       // 8: commets.QueryInfoResponse
	(*QueryInfoDetailResponse)(nil), // 9: commets.QueryInfoDetailResponse
}
var file_proto_commets_handler_proto_depIdxs = []int32{
	0, // 0: commets.Commets.InsertInfo:input_type -> commets.InsertInfoRequest
	1, // 1: commets.Commets.DeleteInfo:input_type -> commets.DeleteInfoRequest
	2, // 2: commets.Commets.UpdateInfo:input_type -> commets.UpdateInfoRequest
	3, // 3: commets.Commets.QueryInfo:input_type -> commets.QueryInfoRequest
	4, // 4: commets.Commets.QueryInfoDetail:input_type -> commets.QueryInfoDetailRequest
	5, // 5: commets.Commets.InsertInfo:output_type -> commets.InsertInfoResponse
	6, // 6: commets.Commets.DeleteInfo:output_type -> commets.DeleteInfoResponse
	7, // 7: commets.Commets.UpdateInfo:output_type -> commets.UpdateInfoResponse
	8, // 8: commets.Commets.QueryInfo:output_type -> commets.QueryInfoResponse
	9, // 9: commets.Commets.QueryInfoDetail:output_type -> commets.QueryInfoDetailResponse
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_commets_handler_proto_init() }
func file_proto_commets_handler_proto_init() {
	if File_proto_commets_handler_proto != nil {
		return
	}
	file_proto_commets_commets_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_commets_handler_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_commets_handler_proto_goTypes,
		DependencyIndexes: file_proto_commets_handler_proto_depIdxs,
	}.Build()
	File_proto_commets_handler_proto = out.File
	file_proto_commets_handler_proto_rawDesc = nil
	file_proto_commets_handler_proto_goTypes = nil
	file_proto_commets_handler_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CommetsClient is the client API for Commets service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CommetsClient interface {
	InsertInfo(ctx context.Context, in *InsertInfoRequest, opts ...grpc.CallOption) (*InsertInfoResponse, error)
	DeleteInfo(ctx context.Context, in *DeleteInfoRequest, opts ...grpc.CallOption) (*DeleteInfoResponse, error)
	UpdateInfo(ctx context.Context, in *UpdateInfoRequest, opts ...grpc.CallOption) (*UpdateInfoResponse, error)
	QueryInfo(ctx context.Context, in *QueryInfoRequest, opts ...grpc.CallOption) (*QueryInfoResponse, error)
	QueryInfoDetail(ctx context.Context, in *QueryInfoDetailRequest, opts ...grpc.CallOption) (*QueryInfoDetailResponse, error)
}

type commetsClient struct {
	cc grpc.ClientConnInterface
}

func NewCommetsClient(cc grpc.ClientConnInterface) CommetsClient {
	return &commetsClient{cc}
}

func (c *commetsClient) InsertInfo(ctx context.Context, in *InsertInfoRequest, opts ...grpc.CallOption) (*InsertInfoResponse, error) {
	out := new(InsertInfoResponse)
	err := c.cc.Invoke(ctx, "/commets.Commets/InsertInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commetsClient) DeleteInfo(ctx context.Context, in *DeleteInfoRequest, opts ...grpc.CallOption) (*DeleteInfoResponse, error) {
	out := new(DeleteInfoResponse)
	err := c.cc.Invoke(ctx, "/commets.Commets/DeleteInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commetsClient) UpdateInfo(ctx context.Context, in *UpdateInfoRequest, opts ...grpc.CallOption) (*UpdateInfoResponse, error) {
	out := new(UpdateInfoResponse)
	err := c.cc.Invoke(ctx, "/commets.Commets/UpdateInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commetsClient) QueryInfo(ctx context.Context, in *QueryInfoRequest, opts ...grpc.CallOption) (*QueryInfoResponse, error) {
	out := new(QueryInfoResponse)
	err := c.cc.Invoke(ctx, "/commets.Commets/QueryInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commetsClient) QueryInfoDetail(ctx context.Context, in *QueryInfoDetailRequest, opts ...grpc.CallOption) (*QueryInfoDetailResponse, error) {
	out := new(QueryInfoDetailResponse)
	err := c.cc.Invoke(ctx, "/commets.Commets/QueryInfoDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CommetsServer is the server API for Commets service.
type CommetsServer interface {
	InsertInfo(context.Context, *InsertInfoRequest) (*InsertInfoResponse, error)
	DeleteInfo(context.Context, *DeleteInfoRequest) (*DeleteInfoResponse, error)
	UpdateInfo(context.Context, *UpdateInfoRequest) (*UpdateInfoResponse, error)
	QueryInfo(context.Context, *QueryInfoRequest) (*QueryInfoResponse, error)
	QueryInfoDetail(context.Context, *QueryInfoDetailRequest) (*QueryInfoDetailResponse, error)
}

// UnimplementedCommetsServer can be embedded to have forward compatible implementations.
type UnimplementedCommetsServer struct {
}

func (*UnimplementedCommetsServer) InsertInfo(context.Context, *InsertInfoRequest) (*InsertInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertInfo not implemented")
}
func (*UnimplementedCommetsServer) DeleteInfo(context.Context, *DeleteInfoRequest) (*DeleteInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteInfo not implemented")
}
func (*UnimplementedCommetsServer) UpdateInfo(context.Context, *UpdateInfoRequest) (*UpdateInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateInfo not implemented")
}
func (*UnimplementedCommetsServer) QueryInfo(context.Context, *QueryInfoRequest) (*QueryInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryInfo not implemented")
}
func (*UnimplementedCommetsServer) QueryInfoDetail(context.Context, *QueryInfoDetailRequest) (*QueryInfoDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryInfoDetail not implemented")
}

func RegisterCommetsServer(s *grpc.Server, srv CommetsServer) {
	s.RegisterService(&_Commets_serviceDesc, srv)
}

func _Commets_InsertInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsertInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommetsServer).InsertInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/commets.Commets/InsertInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommetsServer).InsertInfo(ctx, req.(*InsertInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Commets_DeleteInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommetsServer).DeleteInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/commets.Commets/DeleteInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommetsServer).DeleteInfo(ctx, req.(*DeleteInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Commets_UpdateInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommetsServer).UpdateInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/commets.Commets/UpdateInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommetsServer).UpdateInfo(ctx, req.(*UpdateInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Commets_QueryInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommetsServer).QueryInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/commets.Commets/QueryInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommetsServer).QueryInfo(ctx, req.(*QueryInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Commets_QueryInfoDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryInfoDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommetsServer).QueryInfoDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/commets.Commets/QueryInfoDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommetsServer).QueryInfoDetail(ctx, req.(*QueryInfoDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Commets_serviceDesc = grpc.ServiceDesc{
	ServiceName: "commets.Commets",
	HandlerType: (*CommetsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InsertInfo",
			Handler:    _Commets_InsertInfo_Handler,
		},
		{
			MethodName: "DeleteInfo",
			Handler:    _Commets_DeleteInfo_Handler,
		},
		{
			MethodName: "UpdateInfo",
			Handler:    _Commets_UpdateInfo_Handler,
		},
		{
			MethodName: "QueryInfo",
			Handler:    _Commets_QueryInfo_Handler,
		},
		{
			MethodName: "QueryInfoDetail",
			Handler:    _Commets_QueryInfoDetail_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/commets/handler.proto",
}
